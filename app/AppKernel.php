<?php

use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Config\Loader\LoaderInterface;

class AppKernel extends Kernel
{
    public function registerBundles()
    {
        $bundles = array(
            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
            new Symfony\Bundle\SecurityBundle\SecurityBundle(),
            new Symfony\Bundle\TwigBundle\TwigBundle(),
            new Symfony\Bundle\MonologBundle\MonologBundle(),
            new Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle(),
            new Symfony\Bundle\AsseticBundle\AsseticBundle(),
            new Doctrine\Bundle\DoctrineBundle\DoctrineBundle(),
            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle(),
            new JMS\AopBundle\JMSAopBundle(),
            new JMS\DiExtraBundle\JMSDiExtraBundle($this),
            new JMS\SecurityExtraBundle\JMSSecurityExtraBundle(),
            new Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle(),
            new Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle(),
            new Ivory\CKEditorBundle\IvoryCKEditorBundle(),
            new FOS\JsRoutingBundle\FOSJsRoutingBundle(),
            new Vich\UploaderBundle\VichUploaderBundle(),
            new JMS\SerializerBundle\JMSSerializerBundle(),
            new Exercise\HTMLPurifierBundle\ExerciseHTMLPurifierBundle(),
            new Erivello\SimpleHtmlDomBundle\ErivelloSimpleHtmlDomBundle(),
            new Knp\Bundle\PaginatorBundle\KnpPaginatorBundle(),

            new Gdr\SiteBundle\GdrSiteBundle(),
            new Gdr\UserBundle\GdrUserBundle(),
            new Gdr\GameBundle\GdrGameBundle(),
            new Gdr\RaceBundle\GdrRaceBundle(),
            new Gdr\AvatarBundle\GdrAvatarBundle(),
            new Gdr\ItemsBundle\GdrItemsBundle(),
            new Gdr\AdministrationBundle\GdrAdministrationBundle(),
            new Gdr\MeteoBundle\GdrMeteoBundle(),
        );

        if (in_array($this->getEnvironment(), array('dev', 'test', 'admin'))) {
            $bundles[] = new Symfony\Bundle\DebugBundle\DebugBundle();
            $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
            $bundles[] = new Sensio\Bundle\DistributionBundle\SensioDistributionBundle();
            $bundles[] = new Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle();
            $bundles[] = new Bazinga\Bundle\FakerBundle\BazingaFakerBundle();
        }

        if (in_array($this->getEnvironment(), array('admin'))) {
            $bundles[] = new Sonata\CoreBundle\SonataCoreBundle();
            $bundles[] = new Sonata\BlockBundle\SonataBlockBundle();
            $bundles[] = new  Knp\Bundle\MenuBundle\KnpMenuBundle();
            $bundles[] = new Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle();
            $bundles[] = new Sonata\AdminBundle\SonataAdminBundle();
            $bundles[] = new Sonata\IntlBundle\SonataIntlBundle();
        }

        return $bundles;
    }

    public function registerContainerConfiguration(LoaderInterface $loader)
    {
        $loader->load(__DIR__ . '/config/config_' . $this->getEnvironment() . '.yml');
    }

    public function init()
    {
        date_default_timezone_set( 'Europe/Rome' );
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public static function getCacheNamespace()
    {
        return "Framework";
    }

    /**
     * {@inheritdoc}
     */
    public static function getClassLoaderCacheNamespace()
    {
        return self::getCacheNamespace()."[ClassLoader]";
    }

    /**
     * {@inheritdoc}
     */
    public static function getDoctrineCacheNamespace()
    {
        return self::getCacheNamespace()."[Doctrine]";
    }

}
