<?php

namespace Proxies\__CG__\Gdr\GameBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Location extends \Gdr\GameBundle\Entity\Location implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'id', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isActive', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'type', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'description', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'descriptionMap', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'tags', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'canRoll', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'updatedAt', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'allowSoul', 'map', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'mapName', 'mapNight', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'mapNightName', 'icon', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconName', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconPosX', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconPosY', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'parentMap', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'property', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'enclave', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'subChat', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'requireKey', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isClosed', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isStreet'];
        }

        return ['__isInitialized__', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'id', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isActive', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'type', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'description', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'descriptionMap', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'tags', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'canRoll', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'updatedAt', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'allowSoul', 'map', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'mapName', 'mapNight', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'mapNightName', 'icon', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconName', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconPosX', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'iconPosY', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'parentMap', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'property', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'enclave', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'subChat', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'requireKey', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isClosed', '' . "\0" . 'Gdr\\GameBundle\\Entity\\Location' . "\0" . 'isStreet'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Location $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeName', []);

        return parent::getTypeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Gdr\GameBundle\Entity\TagChat $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tags]);

        return parent::addTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Gdr\GameBundle\Entity\TagChat $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tags]);

        return parent::removeTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getCanRoll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanRoll', []);

        return parent::getCanRoll();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanRoll($canRoll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanRoll', [$canRoll]);

        return parent::setCanRoll($canRoll);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowSoul()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowSoul', []);

        return parent::getAllowSoul();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowSoul($allowSoul)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowSoul', [$allowSoul]);

        return parent::setAllowSoul($allowSoul);
    }

    /**
     * {@inheritDoc}
     */
    public function getMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMap', []);

        return parent::getMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setMap($map)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMap', [$map]);

        return parent::setMap($map);
    }

    /**
     * {@inheritDoc}
     */
    public function setMapName($mapName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMapName', [$mapName]);

        return parent::setMapName($mapName);
    }

    /**
     * {@inheritDoc}
     */
    public function getMapName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMapName', []);

        return parent::getMapName();
    }

    /**
     * {@inheritDoc}
     */
    public function getIcon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcon', []);

        return parent::getIcon();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcon($icon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcon', [$icon]);

        return parent::setIcon($icon);
    }

    /**
     * {@inheritDoc}
     */
    public function setIconName($iconName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconName', [$iconName]);

        return parent::setIconName($iconName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconName', []);

        return parent::getIconName();
    }

    /**
     * {@inheritDoc}
     */
    public function getIconPosY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconPosY', []);

        return parent::getIconPosY();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconPosY($iconPosY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconPosY', [$iconPosY]);

        return parent::setIconPosY($iconPosY);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconPosX()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconPosX', []);

        return parent::getIconPosX();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconPosX($iconPosX)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconPosX', [$iconPosX]);

        return parent::setIconPosX($iconPosX);
    }

    /**
     * {@inheritDoc}
     */
    public function setParentMap(\Gdr\GameBundle\Entity\Location $parentMap = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentMap', [$parentMap]);

        return parent::setParentMap($parentMap);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentMap', []);

        return parent::getParentMap();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionMap', []);

        return parent::getDescriptionMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionMap($descriptionMap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionMap', [$descriptionMap]);

        return parent::setDescriptionMap($descriptionMap);
    }

    /**
     * {@inheritDoc}
     */
    public function setProperty(\Gdr\ItemsBundle\Entity\Property $property = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProperty', [$property]);

        return parent::setProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperty', []);

        return parent::getProperty();
    }

    /**
     * {@inheritDoc}
     */
    public function getRequireKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequireKey', []);

        return parent::getRequireKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequireKey($requireKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequireKey', [$requireKey]);

        return parent::setRequireKey($requireKey);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnclave(\Gdr\GameBundle\Entity\Enclave $enclave = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnclave', [$enclave]);

        return parent::setEnclave($enclave);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnclave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnclave', []);

        return parent::getEnclave();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsClosed($isClosed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsClosed', [$isClosed]);

        return parent::setIsClosed($isClosed);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsClosed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsClosed', []);

        return parent::getIsClosed();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsStreet($isStreet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsStreet', [$isStreet]);

        return parent::setIsStreet($isStreet);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsStreet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsStreet', []);

        return parent::getIsStreet();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubChat(\Gdr\GameBundle\Entity\Location $subChat = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubChat', [$subChat]);

        return parent::setSubChat($subChat);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubChat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubChat', []);

        return parent::getSubChat();
    }

    /**
     * {@inheritDoc}
     */
    public function getMapNight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMapNight', []);

        return parent::getMapNight();
    }

    /**
     * {@inheritDoc}
     */
    public function setMapNight($mapNight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMapNight', [$mapNight]);

        return parent::setMapNight($mapNight);
    }

    /**
     * {@inheritDoc}
     */
    public function getMapNightName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMapNightName', []);

        return parent::getMapNightName();
    }

    /**
     * {@inheritDoc}
     */
    public function setMapNightName($mapNightName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMapNightName', [$mapNightName]);

        return parent::setMapNightName($mapNightName);
    }

}
