<?php

namespace Proxies\__CG__\Gdr\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Wedding extends \Gdr\UserBundle\Entity\Wedding implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'id', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'type', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'officiate', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'officiateDivorce', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'groom', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'bride', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isDivorced', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isMaleWidow', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isFemaleWidow', 'createdAt', 'endedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'id', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'type', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'officiate', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'officiateDivorce', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'groom', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'bride', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isDivorced', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isMaleWidow', '' . "\0" . 'Gdr\\UserBundle\\Entity\\Wedding' . "\0" . 'isFemaleWidow', 'createdAt', 'endedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Wedding $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDivorced($isDivorced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDivorced', [$isDivorced]);

        return parent::setIsDivorced($isDivorced);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDivorced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDivorced', []);

        return parent::getIsDivorced();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroom(\Gdr\UserBundle\Entity\Personage $groom = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroom', [$groom]);

        return parent::setGroom($groom);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroom', []);

        return parent::getGroom();
    }

    /**
     * {@inheritDoc}
     */
    public function setBride(\Gdr\UserBundle\Entity\Personage $bride = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBride', [$bride]);

        return parent::setBride($bride);
    }

    /**
     * {@inheritDoc}
     */
    public function getBride()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBride', []);

        return parent::getBride();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficiate($officiate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficiate', [$officiate]);

        return parent::setOfficiate($officiate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficiate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficiate', []);

        return parent::getOfficiate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsMaleWidow($isMaleWidow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsMaleWidow', [$isMaleWidow]);

        return parent::setIsMaleWidow($isMaleWidow);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsMaleWidow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsMaleWidow', []);

        return parent::getIsMaleWidow();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsFemaleWidow($isFemaleWidow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsFemaleWidow', [$isFemaleWidow]);

        return parent::setIsFemaleWidow($isFemaleWidow);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsFemaleWidow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsFemaleWidow', []);

        return parent::getIsFemaleWidow();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndedAt($endedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndedAt', [$endedAt]);

        return parent::setEndedAt($endedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndedAt', []);

        return parent::getEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficiateDivorce($officiateDivorce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficiateDivorce', [$officiateDivorce]);

        return parent::setOfficiateDivorce($officiateDivorce);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficiateDivorce()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficiateDivorce', []);

        return parent::getOfficiateDivorce();
    }

}
