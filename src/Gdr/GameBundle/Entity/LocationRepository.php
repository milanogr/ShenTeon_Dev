<?php

namespace Gdr\GameBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Gdr\UserBundle\Entity\Personage;

/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends EntityRepository
{
    public function getChatLocationForMeteo()
    {
        return $this->createQueryBuilder('l')
            ->innerJoin('GdrGameBundle:Chat', 'c', 'WITH', 'c.location = l.id')
            ->andWhere('c.createdAt >= :time')
            ->setParameter('time', new \DateTime('-45 minutes'))
            ->groupBy('c.location')
            ->orderBy('c.createdAt', 'DESC')
            ->getQuery()
            ->getResult();
    }

    public function getActiveLocation()
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.isActive = true');
    }

    public function getLocationsForMaps()
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.type != 1')
            ->andWhere('l.parentMap IS NOT NULL')
            ->andWhere('l.iconName IS NOT NULL')
            ->getQuery()
            ->getResult();
    }

    public function getLocationsForMap($id)
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.type != 1')
            ->andWhere('l.parentMap = :id')
            ->setParameter('id', $id)
            ->andWhere('l.iconName IS NOT NULL')
            ->getQuery()
            ->getResult();
    }

    public function getLocationsForDropdown()
    {
        return $this->getActiveLocation()
            ->andWhere('l.isStreet = false')
            ->andWhere('l.iconName IS NOT NULL')
            ->andWhere('l.isClosed = false')
            ->orderBy('l.name')
            ->getQuery()
            ->useQueryCache(true)
            ->useResultCache(true, 900)
            ->getResult();
    }
}
