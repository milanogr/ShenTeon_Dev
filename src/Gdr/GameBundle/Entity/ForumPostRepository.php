<?php

namespace Gdr\GameBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ForumPostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ForumPostRepository extends EntityRepository
{
    public function findPostsForPaginator($thread)
    {
        return $this->createQueryBuilder('fp')
            ->andWhere('fp.thread = :thread')
            ->setParameters(
                array(
                    'thread' => $thread
                )
            )
            ->orderBy('fp.createdAt')
            ->getQuery();
    }

    public function updateAllToLastPostFalse($thread, $exludePost)
    {
        return $this->createQueryBuilder('fp')
            ->update()
            ->set('fp.isLastPost', 0)
            ->andWhere('fp.thread = :thread')
            ->andWhere('fp.id != :excludePost')
            ->setParameters(
                array(
                    'thread' => $thread,
                    'excludePost' => $exludePost
                )
            )
            ->getQuery()
            ->execute();
    }

    public function getLastPostOfThread($thread, $exludePost = null)
    {

        $qb = $this->createQueryBuilder('fp');

        $qb->andWhere('fp.thread = :thread')
            ->setParameter('thread', $thread);

        if (null !== $exludePost) {
            $qb->andWhere('fp.id != :excludePost')
                ->setParameter('excludePost', $exludePost);
        }

        return $qb
            ->orderBy('fp.createdAt', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function getLastPostOfCategory($category, $excludePost = null, $excludeThread = null)
    {
        $qb = $this->createQueryBuilder('fp')
            ->innerJoin('GdrGameBundle:ForumThread', 'ft', 'WITH', 'ft.id = fp.thread')
            ->andWhere('ft.category = :category')
            ->setParameter('category', $category);

        if (null !== $excludePost) {
            $qb->andWhere('fp.id != :excludePost')
                ->setParameter('excludePost', $excludePost);
        }

        if (null !== $excludeThread) {
            $qb->andWhere('ft.id != :excludeThread')
                ->setParameter('excludeThread', $excludeThread);
        }

        return $qb
            ->orderBy('fp.createdAt', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
