<?php

namespace Gdr\GameBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ThreadReadedRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ThreadReadedRepository extends EntityRepository
{
    public function updateThreadNotReaded($thread){
        return $this->createQueryBuilder('tr')
            ->update()
            ->set('tr.isReaded', 0)
            ->where('tr.thread = :thread')
            ->setParameter('thread', $thread)
            ->getQuery()
            ->execute();
    }

    public function setThreadReadedByCategoryForPersonage($personage, $category){
        $this->createQueryBuilder('tr')
            ->update()
            ->set('tr.isReaded', true)
            ->where('ft.category = :category')
            ->andWhere('tr.personage = :personage')
            ->setParameters(array(
                    'personage' => $personage,
                    'category' => $category
                ))
            ->getQuery()
            ->execute();
    }

//    public function getThreadNotReadedByCategoryForPersonage($personage, $category){
//        return $this->createQueryBuilder('tr')
//            ->select('t.id as id')
//            ->innerJoin('tr.thread', 't')
////            ->andWhere('t.category = :category')
////            ->andWhere('tr.personage = :personage')
////            ->andWhere('tr.isReaded = false')
////            ->setParameters(array(
////                    'personage' => $personage,
////                    'category' => $category
////                ))
//            ->getQuery()
//            ->getScalarResult();
//    }
}
