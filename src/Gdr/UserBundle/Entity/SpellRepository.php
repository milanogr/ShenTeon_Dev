<?php

namespace Gdr\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SpellRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpellRepository extends EntityRepository
{
    public function createBaseQuery($level, $pgId)
    {
        return $this->createQueryBuilder('s')
            ->leftJoin('GdrUserBundle:Grimory', 'g', 'WITH', 'g.spell = s.id AND g.personage = '.$pgId)
            ->andWhere('s.level = :level')
            ->setParameter('level', $level)
            ->andWhere('s.isActive = :true')
            ->setParameter('true', true);
    }

    public function findCategoriesByLevel($level, $pgId)
    {
        return $this->createBaseQuery($level, $pgId)
            ->select('sc.id AS id, sc.name AS name, COUNT(g.id) as numero, COUNT(s.id) as numero2')
            ->innerJoin('GdrUserBundle:SpellCategory', 'sc', 'WITH', 'sc.id = s.category')
            ->orderBy('sc.name', 'ASC')
            ->groupBy('sc.id')
            ->getQuery()
            ->getResult();
    }

    public function getQueryForSpellsByCategoryAndLevel($categoryId, $level, $pgId)
    {
        $q = $this->createQueryBuilder('s');

        return $q
            ->addSelect(
                's.id AS id, s.name AS name, s.description AS description, g.isSelected AS isSelected,
                g.isLearned AS isLearned'
            )
            ->leftJoin('GdrUserBundle:Grimory', 'g', 'WITH', 'g.spell = s.id AND g.personage = '.$pgId)
            ->andWhere('s.level = :level')
            ->setParameter('level', $level)
            ->andWhere('s.category = :category')
            ->setParameter('category', $categoryId)
            ->andWhere('s.isActive = :true')
            ->setParameter('true', true)
            ->orderBy('s.name', 'ASC')
            ->getQuery();
    }
}
